apiVersion: v1
kind: Namespace
metadata:
  name: loki-dev
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed
  namespace: loki-dev
---
apiVersion: v1
data:
  config.yaml: |
    auth_enabled: false
    chunk_store_config:
      max_look_back_period: 0s
    common:
      compactor_address: http://loki-loki-distributed-compactor:3100
    compactor:
      shared_store: filesystem
      working_directory: /var/loki/compactor
    distributor:
      ring:
        kvstore:
          store: memberlist
    frontend:
      compress_responses: true
      log_queries_longer_than: 5s
      tail_proxy_url: http://loki-loki-distributed-querier:3100
    frontend_worker:
      frontend_address: loki-loki-distributed-query-frontend-headless:9095
    ingester:
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_idle_period: 30m
      chunk_retain_period: 1m
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal
    ingester_client:
      grpc_client_config:
        grpc_compression: gzip
    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
    memberlist:
      cluster_label: loki.loki-dev
      join_members:
      - loki-loki-distributed-memberlist
    query_range:
      align_queries_with_step: true
      cache_results: true
      max_retries: 5
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            ttl: 24h
    ruler:
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      storage:
        local:
          directory: /etc/loki/rules
        type: local
    runtime_config:
      file: /var/loki-distributed-runtime/runtime.yaml
    schema_config:
      configs:
      - from: "2020-09-07"
        index:
          period: 24h
          prefix: loki_index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
    server:
      http_listen_port: 3100
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
        shared_store: filesystem
      filesystem:
        directory: /var/loki/chunks
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed
  namespace: loki-dev
---
apiVersion: v1
data:
  nginx.conf: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      proxy_http_version    1.1;

      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;

      sendfile     on;
      tcp_nopush   on;
      resolver kube-dns.kube-system.svc.cluster.local;

      server {
        listen             8080;

        location = / {
          return 200 'OK';
          auth_basic off;
          access_log off;
        }

        location = /api/prom/push {
          set $api_prom_push_backend http://loki-loki-distributed-distributor.loki-dev.svc.cluster.local;
          proxy_pass       $api_prom_push_backend:3100$request_uri;
          proxy_http_version 1.1;
        }

        location = /api/prom/tail {
          set $api_prom_tail_backend http://loki-loki-distributed-querier.loki-dev.svc.cluster.local;
          proxy_pass       $api_prom_tail_backend:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
        }

        # Ruler
        location ~ /prometheus/api/v1/alerts.* {
          set $prometheus_api_v1_alerts_backend http://loki-loki-distributed-ruler.loki-dev.svc.cluster.local;
          proxy_pass       $prometheus_api_v1_alerts_backend:3100$request_uri;
        }
        location ~ /prometheus/api/v1/rules.* {
          set $prometheus_api_v1_rules_backend http://loki-loki-distributed-ruler.loki-dev.svc.cluster.local;
          proxy_pass       $prometheus_api_v1_rules_backend:3100$request_uri;
        }
        location ~ /api/prom/rules.* {
          set $api_prom_rules_backend http://loki-loki-distributed-ruler.loki-dev.svc.cluster.local;
          proxy_pass       $api_prom_rules_backend:3100$request_uri;
        }
        location ~ /api/prom/alerts.* {
          set $api_prom_alerts_backend http://loki-loki-distributed-ruler.loki-dev.svc.cluster.local;
          proxy_pass       $api_prom_alerts_backend:3100$request_uri;
        }

        location ~ /api/prom/.* {
          set $api_prom_backend http://loki-loki-distributed-query-frontend-headless.loki-dev.svc.cluster.local;
          proxy_pass       $api_prom_backend:3100$request_uri;
          proxy_http_version 1.1;
        }

        location = /loki/api/v1/push {
          set $loki_api_v1_push_backend http://loki-loki-distributed-distributor.loki-dev.svc.cluster.local;
          proxy_pass       $loki_api_v1_push_backend:3100$request_uri;
          proxy_http_version 1.1;
        }

        location = /loki/api/v1/tail {
          set $loki_api_v1_tail_backend http://loki-loki-distributed-querier.loki-dev.svc.cluster.local;
          proxy_pass       $loki_api_v1_tail_backend:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
        }

        location ~ /loki/api/.* {
          set $loki_api_backend http://loki-loki-distributed-query-frontend-headless.loki-dev.svc.cluster.local;
          proxy_pass       $loki_api_backend:3100$request_uri;
          proxy_http_version 1.1;
        }
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-gateway
  namespace: loki-dev
---
apiVersion: v1
data:
  runtime.yaml: |2

    {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-runtime
  namespace: loki-dev
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-compactor
  namespace: loki-dev
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-distributor
  namespace: loki-dev
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-gateway
  namespace: loki-dev
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-ingester
  namespace: loki-dev
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: loki-loki-distributed-ingester-headless
  namespace: loki-dev
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-memberlist
  namespace: loki-dev
spec:
  clusterIP: None
  ports:
  - name: tcp
    port: 7946
    protocol: TCP
    targetPort: http-memberlist
  selector:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-querier
  namespace: loki-dev
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
    prometheus.io/service-monitor: "false"
  name: loki-loki-distributed-querier-headless
  namespace: loki-dev
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-query-frontend
  namespace: loki-dev
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
    prometheus.io/service-monitor: "false"
  name: loki-loki-distributed-query-frontend-headless
  namespace: loki-dev
spec:
  clusterIP: None
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  - name: grpc
    port: 9095
    protocol: TCP
    targetPort: grpc
  - name: grpclb
    port: 9096
    protocol: TCP
    targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-distributed
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-distributor
  namespace: loki-dev
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: d419eb11cbc8b2b9254158574cbc12fc0579800f8bd4a4a5812fad648a89db9d
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: distributor
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: distributor
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=distributor
        image: docker.io/grafana/loki:2.9.13
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: distributor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-gateway
  namespace: loki-dev
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: df3f9e46a5e03ddaa545137a1f077410890f7fda79ac5fc0fd58951b868c751f
      labels:
        app.kubernetes.io/component: gateway
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: gateway
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: gateway
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - image: docker.io/nginxinc/nginx-unprivileged:1.27.3-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
        name: nginx
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/nginx
          name: config
        - mountPath: /tmp
          name: tmp
        - mountPath: /docker-entrypoint.d
          name: docker-entrypoint-d-override
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-loki-distributed-gateway
        name: config
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: docker-entrypoint-d-override
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-query-frontend
  namespace: loki-dev
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum/config: d419eb11cbc8b2b9254158574cbc12fc0579800f8bd4a4a5812fad648a89db9d
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: query-frontend
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=query-frontend
        image: docker.io/grafana/loki:2.9.13
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: query-frontend
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-compactor
  namespace: loki-dev
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: compactor
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-loki-distributed-compactor-headless
  template:
    metadata:
      annotations:
        checksum/config: d419eb11cbc8b2b9254158574cbc12fc0579800f8bd4a4a5812fad648a89db9d
      labels:
        app.kubernetes.io/component: compactor
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: compactor
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: compactor
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=compactor
        image: docker.io/grafana/loki:2.9.13
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: compactor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: temp
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
  updateStrategy:
    rollingUpdate:
      partition: 0
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: ingester
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-ingester
  namespace: loki-dev
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-loki-distributed-ingester-headless
  template:
    metadata:
      annotations:
        checksum/config: d419eb11cbc8b2b9254158574cbc12fc0579800f8bd4a4a5812fad648a89db9d
      labels:
        app.kubernetes.io/component: ingester
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: ingester
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: ingester
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=ingester
        image: docker.io/grafana/loki:2.9.13
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: ingester
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 300
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: ingester
            app.kubernetes.io/instance: loki
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
  updateStrategy:
    rollingUpdate:
      partition: 0
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.9.13
    helm.sh/chart: loki-distributed-0.80.5
  name: loki-loki-distributed-querier
  namespace: loki-dev
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
  serviceName: loki-loki-distributed-querier-headless
  template:
    metadata:
      annotations:
        checksum/config: d419eb11cbc8b2b9254158574cbc12fc0579800f8bd4a4a5812fad648a89db9d
      labels:
        app.kubernetes.io/component: querier
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: querier
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-distributed
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: querier
                app.kubernetes.io/instance: loki
                app.kubernetes.io/name: loki-distributed
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=querier
        image: docker.io/grafana/loki:2.9.13
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 300
        name: querier
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /var/loki-distributed-runtime
          name: runtime-config
        - mountPath: /var/loki
          name: data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-loki-distributed
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: querier
            app.kubernetes.io/instance: loki
            app.kubernetes.io/name: loki-distributed
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: loki-loki-distributed
        name: config
      - configMap:
          name: loki-loki-distributed-runtime
        name: runtime-config
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
